(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[704],{8651:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/strapi",function(){return o(2483)}])},2483:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return b}});var a=o(5893),l=o(2780),d=o(2152),t=o(5784),i=o(2985),r=o(1604),p=JSON.parse('{"Dockerfile":"# Creating multi-stage build for production\\nFROM {{node_version}}{% if alpine %}-alpine{% endif %} AS build\\n{% if alpinePackages %}\\nRUN apk update && apk add --no-cache {{alpinePackages}} > /dev/null 2>&1\\n{% endif %}\\nENV NODE_ENV={{node_env}}\\n\\nWORKDIR /opt/\\nCOPY package.json yarn.lock ./\\n{% if build_packages %}\\nRUN yarn global add {{build_packages}}\\n{% endif %}\\nRUN yarn config set network-timeout 600000 -g && yarn install --{{node_env}}\\nENV PATH /opt/node_modules/.bin:$PATH\\nWORKDIR /opt/app\\nCOPY . .\\nRUN yarn build\\n\\n# Creating final production image\\nFROM {{node_version}}{% if alpine %}-alpine{% endif %}\\nRUN apk add --no-cache {{production_packages}}\\nENV NODE_ENV={{node_env}}\\nWORKDIR /opt/\\nCOPY --from=build /opt/node_modules ./node_modules\\nWORKDIR /opt/app\\nCOPY --from=build /opt/app ./\\nENV PATH /opt/node_modules/.bin:$PATH\\n\\nRUN chown -R {{user}}:{{user}} /opt/app\\nUSER {{user}}\\nEXPOSE {{port}}\\nCMD [\\"yarn\\", \\"start\\"]"}');let s=r.z.object({node_version:r.z.string().default("node:18"),alpine:r.z.boolean().default(!0),alpinePackages:r.z.string().default("build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git"),node_env:r.z.string().default("production"),build_packages:r.z.string().default("node-gyp"),production_packages:r.z.string().default("vips-dev"),user:r.z.string().default("node"),port:r.z.string().default("1337")});s.parse({});var c=o(6312),u=o(7536);function b(){let e=(0,u.cI)({resolver:(0,c.F)(s),defaultValues:{node_version:"node:18",alpine:!0,alpinePackages:"build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git",node_env:"production",build_packages:"node-gyp",production_packages:"vips-dev",user:"node",port:"1337"}});return(0,a.jsx)(l.A,{title:"Strapi",getFiles:()=>(function(e){let n=s.parse(e);return{...p,Dockerfile:(0,i.renderString)(p.Dockerfile,n)}})(e.getValues()),children:(0,a.jsx)(d.l0,{...e,children:(0,a.jsxs)("div",{className:"space-y-8",children:[(0,a.jsx)(t.ih,{control:e.control,name:"node_version",label:"Node version",options:[{label:"node:4",value:"node:4"},{label:"node:6",value:"node:6"},{label:"node:6",value:"node:6"},{label:"node:8",value:"node:8"},{label:"node:10",value:"node:10"},{label:"node:12",value:"node:12"},{label:"node:14",value:"node:14"},{label:"node:16",value:"node:16"},{label:"node:18",value:"node:18"},{label:"node:20",value:"node:20"}]}),(0,a.jsx)(t.j7,{control:e.control,name:"alpine",label:"Node alpine?",description:"Check if you want the alpine version of node selected"}),(0,a.jsx)(t.yt,{control:e.control,name:"alpinePackages",label:"Alpine packages",inputProps:{placeholder:"..."}}),(0,a.jsx)(t.yt,{control:e.control,name:"node_env",label:"Node Environment",inputProps:{placeholder:"production"}}),(0,a.jsx)(t.yt,{control:e.control,name:"build_packages",label:"Global packages",inputProps:{placeholder:"node-gyp"}}),(0,a.jsx)(t.yt,{control:e.control,name:"production_packages",label:"Production packages",inputProps:{placeholder:"vips-dev"}}),(0,a.jsx)(t.yt,{control:e.control,name:"user",label:"User",inputProps:{placeholder:"node"}}),(0,a.jsx)(t.yt,{control:e.control,name:"port",label:"Port",inputProps:{placeholder:"1337"}})]})})})}}},function(e){e.O(0,[429,509,556,774,888,179],function(){return e(e.s=8651)}),_N_E=e.O()}]);